// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  /**
   * output   = "../generated/prisma"
   */
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  id  Int    @id @default(autoincrement())
  rol String

  Usuario Usuario[]
}

model Usuario {
  id                  Int       @id @default(autoincrement())
  nombre              String    @default("John Doe")
  correo              String    @unique
  password            String
  rol                 Roles     @relation(fields: [rolesId], references: [id])
  img                 String?
  estado              Boolean?  @default(true)
  google              Boolean?  @default(false)
  online              Boolean?  @default(false)
  rolesId             Int
  procesosResponsable Proceso[] @relation("ProcesoResponsables")
}

model Proceso {
  id            Int       @id @default(autoincrement())
  codigo        String    @unique
  nombre        String
  tipo          TipoProceso
  nivel         Int
  descripcion   String?
  parentId      Int?
  parent        Proceso?  @relation("ProcesoPadre", fields: [parentId], references: [id])
  hijos         Proceso[] @relation("ProcesoPadre")
  creadoEn      DateTime  @default(now())
  actualizadoEn DateTime  @updatedAt
  dueños       Dueño[]
  responsables  Usuario[] @relation("ProcesoResponsables")
}

model Dueño {
  id        Int      @id @default(autoincrement())
  oficina   String
  director  String
  procesoId Int?
  proceso   Proceso? @relation(fields: [procesoId], references: [id])
}


enum TipoProceso {
  Misional
  Soporte
  Estratégico
}