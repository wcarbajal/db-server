// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  /**
   * output   = "../generated/prisma"
   */
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  id  Int    @id @default(autoincrement())
  rol String @unique

  Usuario Usuario[]
}

model Usuario {
  id                  Int       @id @default(autoincrement())
  nombre              String    @default("John Doe")
  correo              String    @unique
  password            String
  rol                 Roles     @relation(fields: [rolesId], references: [id])
  img                 String?
  estado              Boolean?  @default(true)
  google              Boolean?  @default(false)
  online              Boolean?  @default(false)
  rolesId             Int
  procesosResponsable Proceso[] @relation("ProcesoResponsables")
}

model Owner {
  id       Int    @id @default(autoincrement())
  oficina  String
  siglas   String
  director String
  correo   String
  estado   Boolean @default(true)

  procesos Proceso[] @relation("ProcesoOwners")
}

enum TipoProceso {
  Misional
  Soporte
  Estrat√©gico
}

model Mapa {
  id            Int       @id @default(autoincrement())
  nombre        String    @unique
  ruc           String    @unique
  descripcion   String?
  entrada       String?
  salida        String?
  creadoEn      DateTime  @default(now())
  actualizadoEn DateTime  @updatedAt
  estado        Boolean   @default(true)
  procesos      Proceso[]
}

model Proceso {
  id            Int         @id @default(autoincrement())
  codigo        String      @unique
  nombre        String
  tipo          TipoProceso
  nivel         Int
  descripcion   String?
  objetivo      String?
  estrategico   String?
  alcance       String?
  parentId      Int?
  estado        Boolean?    @default(true)
  parent        Proceso?    @relation("ProcesoPadre", fields: [parentId], references: [id])
  hijos         Proceso[]   @relation("ProcesoPadre")
  creadoEn      DateTime    @default(now())
  actualizadoEn DateTime    @updatedAt
  owners        Owner[]     @relation("ProcesoOwners")
  responsables  Usuario[]   @relation("ProcesoResponsables")

  diagrama    Diagrama?
  ficha       Ficha?
  actividades Actividad[]
  indicadores indicador[]
  mapa        Mapa?       @relation(fields: [mapaId], references: [id])
  mapaId      Int?
}

model Diagrama {
  id            Int      @id @default(autoincrement())
  url           String
  creadoEn      DateTime @default(now())
  actualizadoEn DateTime @updatedAt
  procesoId     Int      @unique
  proceso       Proceso  @relation(fields: [procesoId], references: [id])
}

model Ficha {
  id          Int     @id @default(autoincrement())
  entradas    String?
  salidas     String?
  proveedores String?
  clientes    String?
  riesgos     String?
  registros   String?
  fichaId     Int     @unique
  proceso     Proceso @relation(fields: [fichaId], references: [id])
}

model Actividad {
  id              Int     @id @default(autoincrement())
  nombre          String
  descripcion     String?
  unidadOperativa String?
  responsable     String
  procesoId       Int
  proceso         Proceso @relation(fields: [procesoId], references: [id])
}

model indicador {
  id              Int     @id @default(autoincrement())
  nombre          String
  tipo            String
  justificacion   String?
  formula         String?
  sentidoEsperado String?
  unidadMedida    String?
  frecuencia      String?
  fuenteDatos     String?
  logrosEsperados String?
  lineaBase       String?

  procesoId Int
  proceso   Proceso @relation(fields: [procesoId], references: [id])
}
